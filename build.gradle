buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://plugins.gradle.org/m2' }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.1.+') {
            changing = true
        }
    }
}

apply plugin: 'forge'

version = "1.0.0"
group= "com.ezzo.bobfluidtranslator" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "bobfluidtranslator"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

repositories {
    maven {
        name = "OpenComputers"
        url = "https://maven.cil.li/"
    }
    maven {
        name = "Jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name = "CurseMaven"
        url = "https://cursemaven.com"
    }
    maven {
        name = "OpenComputers"
        url = "https://maven.cil.li/"
    }
    maven {
        name = "ChickenBones"
        url = "https://chickenbones.net/maven/"
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
    compile files("libs/HBM-NTM-1.0.27_X5426_H261.jar")

    implementation "li.cil.oc:OpenComputers:MC1.7.10-1.5.+:api"

    implementation 'codechicken:CodeChickenCore:1.7.10-1.0.4.29:dev'
    compileOnly 'codechicken:CodeChickenCore:1.7.10-1.0.4.29:src'

    implementation 'codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev'
    compileOnly 'codechicken:CodeChickenLib:1.7.10-1.1.3.140:src'

    implementation 'codechicken:NotEnoughItems:1.7.10-1.0.3.74:dev'
    compileOnly 'codechicken:NotEnoughItems:1.7.10-1.0.3.74:src'
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def modsDir = "/home/lorenzo/PrismLauncher/instances/Forge Fluids/minecraft/mods"

task copyModJar(type: Copy) {
    from("$buildDir/libs") {
        include "${archivesBaseName}-${version}.jar"
    }
    into modsDir
}

build.finalizedBy copyModJar

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}